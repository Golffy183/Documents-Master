//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/PlayerControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControl"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""c8492735-f58b-4830-afbf-d7612f313aae"",
            ""actions"": [
                {
                    ""name"": ""Horizontal1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7970409b-5b22-420a-be0f-4d8eeb20996b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Horizontal2"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5c58cedd-5034-4096-aa03-7697a40a8124"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Vertical1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""291e3ab0-4383-4147-a380-c28fc309c05d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Vertical2"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cfc4cc09-9527-4a6d-b6db-81a5d3aa3268"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickItem1"",
                    ""type"": ""Button"",
                    ""id"": ""41c036b1-9605-466f-ac80-a3098cff1c57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickItem2"",
                    ""type"": ""Button"",
                    ""id"": ""229ce4a3-b5a4-40b5-8964-4e2a89261b09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""235f68a3-14f4-485f-84e2-d876429be6c6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""528a7bcf-f534-438a-8962-5d12946fcf2c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d4678307-a7e6-4bef-84d1-432520d93d7e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""7977f724-4c41-4d90-b675-c0459bb37e78"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""38aed83f-ba2d-410c-8df8-3a289d7d62e8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""91bd70db-a17c-4c49-b9de-3cd79456f7bc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5d53e270-1752-4fa0-ac3f-53ea373807af"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickItem1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""afa0cd88-18ad-499f-8da0-1a4967b0f6d8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""db908949-e8dc-467e-8e48-edad53cdaed0"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2f056f47-724f-4714-adc2-6c1ed543cf99"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""bcb43b7c-732d-4397-88f2-d1ce7551de3c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3b5580bf-12ca-4b08-9e2f-a980a86db5a0"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4eccef84-e590-4e51-95ff-50cce9d2e897"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""72390b91-7ca0-480d-b904-3cf41d35986e"",
                    ""path"": ""<Keyboard>/slash"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickItem2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Horizontal1 = m_Gameplay.FindAction("Horizontal1", throwIfNotFound: true);
        m_Gameplay_Horizontal2 = m_Gameplay.FindAction("Horizontal2", throwIfNotFound: true);
        m_Gameplay_Vertical1 = m_Gameplay.FindAction("Vertical1", throwIfNotFound: true);
        m_Gameplay_Vertical2 = m_Gameplay.FindAction("Vertical2", throwIfNotFound: true);
        m_Gameplay_PickItem1 = m_Gameplay.FindAction("PickItem1", throwIfNotFound: true);
        m_Gameplay_PickItem2 = m_Gameplay.FindAction("PickItem2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Horizontal1;
    private readonly InputAction m_Gameplay_Horizontal2;
    private readonly InputAction m_Gameplay_Vertical1;
    private readonly InputAction m_Gameplay_Vertical2;
    private readonly InputAction m_Gameplay_PickItem1;
    private readonly InputAction m_Gameplay_PickItem2;
    public struct GameplayActions
    {
        private @PlayerControl m_Wrapper;
        public GameplayActions(@PlayerControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Horizontal1 => m_Wrapper.m_Gameplay_Horizontal1;
        public InputAction @Horizontal2 => m_Wrapper.m_Gameplay_Horizontal2;
        public InputAction @Vertical1 => m_Wrapper.m_Gameplay_Vertical1;
        public InputAction @Vertical2 => m_Wrapper.m_Gameplay_Vertical2;
        public InputAction @PickItem1 => m_Wrapper.m_Gameplay_PickItem1;
        public InputAction @PickItem2 => m_Wrapper.m_Gameplay_PickItem2;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Horizontal1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHorizontal1;
                @Horizontal1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHorizontal1;
                @Horizontal1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHorizontal1;
                @Horizontal2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHorizontal2;
                @Horizontal2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHorizontal2;
                @Horizontal2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHorizontal2;
                @Vertical1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnVertical1;
                @Vertical1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnVertical1;
                @Vertical1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnVertical1;
                @Vertical2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnVertical2;
                @Vertical2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnVertical2;
                @Vertical2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnVertical2;
                @PickItem1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPickItem1;
                @PickItem1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPickItem1;
                @PickItem1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPickItem1;
                @PickItem2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPickItem2;
                @PickItem2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPickItem2;
                @PickItem2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPickItem2;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Horizontal1.started += instance.OnHorizontal1;
                @Horizontal1.performed += instance.OnHorizontal1;
                @Horizontal1.canceled += instance.OnHorizontal1;
                @Horizontal2.started += instance.OnHorizontal2;
                @Horizontal2.performed += instance.OnHorizontal2;
                @Horizontal2.canceled += instance.OnHorizontal2;
                @Vertical1.started += instance.OnVertical1;
                @Vertical1.performed += instance.OnVertical1;
                @Vertical1.canceled += instance.OnVertical1;
                @Vertical2.started += instance.OnVertical2;
                @Vertical2.performed += instance.OnVertical2;
                @Vertical2.canceled += instance.OnVertical2;
                @PickItem1.started += instance.OnPickItem1;
                @PickItem1.performed += instance.OnPickItem1;
                @PickItem1.canceled += instance.OnPickItem1;
                @PickItem2.started += instance.OnPickItem2;
                @PickItem2.performed += instance.OnPickItem2;
                @PickItem2.canceled += instance.OnPickItem2;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnHorizontal1(InputAction.CallbackContext context);
        void OnHorizontal2(InputAction.CallbackContext context);
        void OnVertical1(InputAction.CallbackContext context);
        void OnVertical2(InputAction.CallbackContext context);
        void OnPickItem1(InputAction.CallbackContext context);
        void OnPickItem2(InputAction.CallbackContext context);
    }
}
